<%=content_for :header do %>
  <%= stylesheet_link_tag "/stylesheets/v3/register.css" %>
<% end %>

<%- @page_title = "注册 设置密码" -%>
<% if @fake_user.persisted? && @fake_user.errors.empty? %>
<div class="container">
  <nav class="lastRegistStep">
    <strong>仅需2步，完善资料，即可开户全球投资旅程！</strong>
    <span class="current"><i>1</i> 设置密码</span>
    <span class="step3"><i></i> 请完善资料</span>
  </nav>
</div>
<div class="container registration setUp_password">
  <%= form_for User.new, url: account_user_path, method: :post, html: {id: 'j_registration_second'} do |f| %>
      <input type="hidden" name="confirmation_token" value="<%=params[:confirmation_token]%>">
  	<dl>
  		<dt>登录名</dt>
  		<dd class="mail_name"><%= @fake_user.email %></dd>
  		<dt>昵称</dt>
  		<dd>
        <%= f.text_field :username, class: 'medium' %>
        <span class="prompt" style="display:none;">2-30个字符，支持中英文、下划线，不能全为数字</span>
      </dd>
  		<dt>登录密码</dt>
  		<dd class="focus">
        <%=f.password_field :password, class: 'medium'%>
      	<div class="content-box prompt" style="display:none">
      		<div class="security-strength">
      			<h5>安全程度</h5>
      			<span class="hotrate"><em style="width:80%;"></em></span>
      			<span>弱</span>
      		</div>
      		<ul>
      			<li id="length">6-20个字符</li>
      			<li id="type">只能包含字母、数字以及标点符号（除空格）</li>
      			<li id="number">字母、数字和标点符号至少包含2种</li>
      		</ul>
      	</div>
      </dd>
  		<dt>确认密码</dt>
  		<dd>
        <%=f.password_field :password_confirmation, class: 'medium' %>
      </dd>
  		<dd class="naet_button">
        <%= f.submit '下一步', class: 'b_btn register'%>
      </dd>
  	</dl>
  <% end %>
	
</div>
<% elsif @fake_user.persisted? && @fake_user.errors.has_key?(:confirmation_token) %>
    <center>激活邮件已超过有效期，点此<a href="javascript:void(0);" onclick="javascript:$('form').submit();">重新发送</a></center>
    <%= form_tag account_confirmations_path, method: :post, remote: true do %>
      <%=hidden_field_tag "user[email]", params[:email], value: @fake_user.email%>
    <% end %>
  
<% else %>
  
  <center>激活邮件不正确</center>

<% end %>


<script>
	// $(".focus input").focus(function(){
//     $(this).next('.errorTip').hide();
//     $('.prompt').hide();
//     checkPasswd($(this));
//     $(".content-box").show();
//   })
//
//   $(".focus input").blur(function(){
//     $(".content-box").hide();
//   })
//
//   $(".focus input").keyup(function(){
//     checkPasswd($(this));
//})
  
  function checkPasswd(obj){
    var passwd = $(obj).val();
    var c_type = checkType(passwd);
    var c_length = checkLength(passwd);
    var c_class = checkClass(passwd);
    var c_strong = checkStrong(passwd);
    var percent = (c_strong+1)/5 * 100;
    $(".hotrate em").attr("style", "width:" + percent + "%;");
    $("#number").attr("class", "");
    $("#length").attr("class", "");
    $("#type").attr("class", "");
    if(c_length && c_type && c_class){
      //$(".content-box").hide();
    }else{
      if(!c_length){
        $("#length").addClass("error");
      }else{
        $("#length").attr("class", "");
      }
      if(!c_type){
        $("#type").addClass("error");
      }else{
        $("#type").attr("class", "");
      }
      if(!c_class){
        $("#number").addClass("error");
      }else{
        $("#number").attr("class", "");
      }
      $(".content-box").show();
    }
  }
  
  function checkType(passwd){
    var reg = /[\x00-\xff]/g;
    return reg.test(passwd);
  }
  
  function checkLength(passwd){
    return passwd.length >= 6 && passwd.length <= 20;
  }
  
  function checkClass(passwd){
    var word = /[a-zA-Z]+/g;
    var digit = /\d+/g;
    var others = /[^a-zA-Z\d]+/g;
    var word_num = word.test(passwd) ? 1 : 0;
    var digit_num = digit.test(passwd) ? 1 : 0;
    var others_num = others.test(passwd) ? 1 : 0;
    return word_num + digit_num + others_num >= 2;
  }
  
  
  /*
      判断字符类型
  */
  function CharMode(iN) {
      if (iN >= 48 && iN <= 57) //数字  
          return 1;
      if (iN >= 65 && iN <= 90) //大写字母  
          return 2;
      if (iN >= 97 && iN <= 122) //小写  
          return 4;
      else
          return 8; //特殊字符  
  }
  
  
  /*
      统计字符类型
  */
  function bitTotal(num) {
      modes = 0;
      for (i = 0; i < 4; i++) {
          if (num & 1) modes++;
          num >>>= 1;
      }
      return modes;
  }
  /*
      返回密码的强度级别
  */
  function checkStrong(sPW) {
      if (sPW.length <= 6)
          return 0; //密码太短  
      var Modes = 0;
      for (i = 0; i < sPW.length; i++) {
          //测试每一个字符的类别并统计一共有多少种模式.  
          Modes |= CharMode(sPW.charCodeAt(i));
      }
      return bitTotal(Modes);
  }
</script>
